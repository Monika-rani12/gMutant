        -:    0:Source:PS-P7-L-T-R16-B2.c
        -:    0:Graph:PS-P7-L-T-R16-B2.gcno
        -:    0:Data:PS-P7-L-T-R16-B2.gcda
        -:    0:Runs:10
        -:    0:Programs:1
        -:    1:#include<stdio.h>
        -:    2:#ifdef LLBMC
        -:    3:#include <llbmc.h>
        -:    4:#else
        -:    5://removed
        -:    6:#endif
        -:    7:
        -:    8:#define BOUND 2
        -:    9:int kappa;
        -:   10:int input,output;
        -:   11:#include <assert.h>
        -:   12:#include <math.h>
        -:   13:#include <stdlib.h>
        -:   14:
        -:   15:
        -:   16:	// inputs
        -:   17:	int inputs[] = {2,4,3,1,5};
        -:   18:
        -:   19:	void errorCheck();
        -:   20:	void calculate_output(int);
        -:   21:	void calculate_outputm1(int);
        -:   22:	void calculate_outputm2(int);
        -:   23:	void calculate_outputm3(int);
        -:   24:	void calculate_outputm4(int);
        -:   25:	void calculate_outputm5(int);
        -:   26:	void calculate_outputm6(int);
        -:   27:	void calculate_outputm7(int);
        -:   28:	void calculate_outputm8(int);
        -:   29:	void calculate_outputm9(int);
        -:   30:	void calculate_outputm10(int);
        -:   31:	void calculate_outputm11(int);
        -:   32:	void calculate_outputm12(int);
        -:   33:	void calculate_outputm13(int);
        -:   34:	void calculate_outputm14(int);
        -:   35:	void calculate_outputm15(int);
        -:   36:	void calculate_outputm16(int);
        -:   37:	void calculate_outputm17(int);
        -:   38:	void calculate_outputm18(int);
        -:   39:	void calculate_outputm19(int);
        -:   40:	void calculate_outputm20(int);
        -:   41:	void calculate_outputm21(int);
        -:   42:	void calculate_outputm22(int);
        -:   43:	void calculate_outputm23(int);
        -:   44:	void calculate_outputm24(int);
        -:   45:	void calculate_outputm25(int);
        -:   46:	void calculate_outputm26(int);
        -:   47:	void calculate_outputm27(int);
        -:   48:	void calculate_outputm28(int);
        -:   49:	void calculate_outputm29(int);
        -:   50:
        -:   51:	 int a4 = 268;
        -:   52:	 int a163 = 93;
        -:   53:	 int a41[] = {1,2,3,4,5,6,7,8};
        -:   54:	 int a143[] = {3,4,5,6,7,8,9,10};
        -:   55:	 int a64 = 6;
        -:   56:	 int a44 = 5;
        -:   57:	 int a42 = 134;
        -:   58:	 int a40 = 3;
        -:   59:	 int a15 = 8;
        -:   60:	 int a26 = 13;
        -:   61:	 int a87  = 36;
        -:   62:	 int a103[] = {65,66,67,68,69,70};
        -:   63:	 int a35[] = {71,72,73,74,75,76};
        -:   64:	 int a32[] = {77,78,79,80,81,82};
        -:   65:	 int *a96 = a32;
        -:   66:	 int a99 = 14;
        -:   67:	 int cf = 1;
        -:   68:	 int a171[] = {6,7,8,9,10,11,12,13};
        -:   69:	 int a174[] = {23,24,25,26,27,28};
        -:   70:	 int a39[] = {29,30,31,32,33,34};
        -:   71:	 int a69[] = {35,36,37,38,39,40};
        -:   72:	 int *a90 = a69;
        -:   73:	 int a162  = 34;
        -:   74:	 int a14 = 346;
        -:   75:
        -:   76:
function errorCheck called 20 returned 100% blocks executed 100%
       20:   77:	void errorCheck() {
       20:   77-block  0
        -:   78:
       20:   79:	}
function calculate_outputm11 called 0 returned 0% blocks executed 0%
    #####:   80: void calculate_outputm11(int input) {
    $$$$$:   80-block  0
    #####:   81:printf("POINT: 1\n");
    $$$$$:   81-block  0
call    0 never executed
        -:   82:
    #####:   83:    if(((a44 == a143[0] && (((70 == a96[5]) && (( cf==1  && input == inputs[3]) && a15 == 10)) && a42 <=  -51)) && (a40 == 1 && (a42 <=  -51 && ((a162 == 33 && a163 <=  -165) && a162 == 33))))) {
branch  0 never executed
branch  1 never executed
    $$$$$:   83-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:   83-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:   83-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:   83-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:   83-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:   83-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:   83-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:   83-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:   83-block  8
branch 18 never executed
branch 19 never executed
    $$$$$:   83-block  9
branch 20 never executed
branch 21 never executed
    #####:   84:printf("POINT: 2\n");
    $$$$$:   84-block  0
call    0 never executed
    #####:   85:    	cf = 0;
    #####:   86:    	a14 = ((((((a42 * a42) % 14999) / 5) + 19282) * 10) / 9);
    #####:   87:    	a96 = a35;
    #####:   88:    	a40 = (a15 + -8);
    #####:   89:    	a162 = 32 ;
    #####:   90:    	a90 = a39;
    #####:   91:    	a44 = a143[(a40 + -1)];
    #####:   92:    	a87 = 32 ;
    #####:   93:    	a42 = ((((((a42 * a163) % 14999) % 83) - 6) / 5) / 5); 
    #####:   94:    	 printf("%d\n", 25); //fflush(stdout); 
call    0 never executed
unconditional  1 never executed
        -:   95:    } 
    #####:   96:printf("POINT: 3\n");
    $$$$$:   96-block  0
call    0 never executed
        -:   97:
    #####:   98:    if((((((( cf==1  && a163 <=  -165) && input == inputs[4]) && a15 == 10) && a42 <=  -51) && a44 == a143[0]) && ((a42 <=  -51 && (((70 == a96[5]) && a162 == 33) && a162 == 33)) && a40 == 1))) {
branch  0 never executed
branch  1 never executed
    $$$$$:   98-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:   98-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:   98-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:   98-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:   98-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:   98-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:   98-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:   98-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:   98-block  8
branch 18 never executed
branch 19 never executed
    $$$$$:   98-block  9
branch 20 never executed
branch 21 never executed
    #####:   99:printf("POINT: 4\n");
    $$$$$:   99-block  0
call    0 never executed
    #####:  100:    	cf = 0;
    #####:  101:    	a64 = a41[((a40 - a40) + 1)];
    #####:  102:    	a96 = a35;
    #####:  103:    	a87 = 35 ;
    #####:  104:    	a90 = a39;
    #####:  105:    	a40 = (a15 + -8);
    #####:  106:    	a162 = 32 ;
    #####:  107:    	a42 = ((((((((a42 * a163) % 14999) % 83) + -29) + 62) * 5) % 83) - -26);
    #####:  108:    	a44 = a143[(a40 - 1)]; 
    #####:  109:    	 printf("%d\n", 21); //fflush(stdout); 
call    0 never executed
unconditional  1 never executed
        -:  110:    } 
    #####:  111:printf("POINT: 5\n");
    $$$$$:  111-block  0
call    0 never executed
        -:  112:
    #####:  113:    if((((a15 == 10 && ((a44 == a143[0] && (a40 == 1 && (( cf==1  && (70 == a96[5])) && input == inputs[2]))) && a163 <=  -165)) && (27 == a90[4])) && (a44 == a143[0] && (a40 == 1 && a44 == a143[0])))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  113-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  113-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  113-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  113-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  113-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  113-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  113-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  113-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:  113-block  8
branch 18 never executed
branch 19 never executed
    $$$$$:  113-block  9
branch 20 never executed
branch 21 never executed
    #####:  114:printf("POINT: 6\n");
    $$$$$:  114-block  0
call    0 never executed
    #####:  115:    	cf = 0;
    #####:  116:    	a44 = a143[a40];
    #####:  117:    	a64 = a41[(a15 + -9)];
    #####:  118:    	a96 = a35;
    #####:  119:    	a90 = a39;
    #####:  120:    	a162 = 32 ;
    #####:  121:    	a42 = ((((((a42 * a163) % 14999) / 5) % 83) + 23) + -13);
    #####:  122:    	a87 = 35 ;
    #####:  123:    	a40 = (a15 + -8); 
    #####:  124:    	 printf("%d\n", 21); //fflush(stdout); 
call    0 never executed
unconditional  1 never executed
        -:  125:    } 
    #####:  126:}
function calculate_outputm1 called 0 returned 0% blocks executed 0%
    #####:  127: void calculate_outputm1(int input) {
    $$$$$:  127-block  0
    #####:  128:printf("POINT: 7\n");
    $$$$$:  128-block  0
call    0 never executed
        -:  129:
    #####:  130:    if((((27 == a90[4]) && ((( cf==1  && a15 == 10) && a44 == a143[0]) && a44 == a143[0])) && (a40 == 1 && ((27 == a90[4]) && a40 == 1)))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  130-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  130-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  130-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  130-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  130-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  130-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  130-block  6
branch 14 never executed
branch 15 never executed
    #####:  131:printf("POINT: 8\n");
    $$$$$:  131-block  0
call    0 never executed
    #####:  132:    	calculate_outputm11(input);
call    0 never executed
unconditional  1 never executed
        -:  133:    } 
    #####:  134:}
function calculate_outputm12 called 0 returned 0% blocks executed 0%
    #####:  135: void calculate_outputm12(int input) {
    $$$$$:  135-block  0
    #####:  136:printf("POINT: 9\n");
    $$$$$:  136-block  0
call    0 never executed
        -:  137:
    #####:  138:    if(((a14 <=  93 && ( cf==1  && ((-165 < a163) && (48 >= a163)))) && ((27 == a90[4]) && (a42 <=  -51 && (a40 == 1 && (a44 == a143[0] && (a162 == 33 && (input == inputs[1] && ((70 == a96[5]) && a162 == 33))))))))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  138-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  138-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  138-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  138-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  138-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  138-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  138-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  138-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:  138-block  8
branch 18 never executed
branch 19 never executed
    $$$$$:  138-block  9
branch 20 never executed
branch 21 never executed
    $$$$$:  138-block 10
branch 22 never executed
branch 23 never executed
    #####:  139:printf("POINT: 10\n");
    $$$$$:  139-block  0
call    0 never executed
    #####:  140:    	cf = 0;
    #####:  141:printf("POINT: 11\n");
call    0 never executed
        -:  142:
    #####:  143:    	if(( cf==1  || (a64 == a41[2] || ((-165 < a163) && (48 >= a163))))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  143-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  143-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  143-block  2
branch  6 never executed
branch  7 never executed
    #####:  144:printf("POINT: 12\n");
    $$$$$:  144-block  0
call    0 never executed
    #####:  145:    	a90 = a174;
    #####:  146:    	a42 = (((((a42 % 99) + 261) * 9) / 10) - 16);
    #####:  147:    	a96 = a35;
    #####:  148:    	a87 = 34 ;
    #####:  149:    	a44 = a143[2];
    #####:  150:    	a15 = ((a40 / a40) + 12);
    #####:  151:    	a162 = 35 ;
    #####:  152:    	a40 = 6; 
unconditional  0 never executed
        -:  153:    	}else {
    #####:  154:printf("POINT: 14\n");
    $$$$$:  154-block  0
call    0 never executed
    #####:  155:    	a162 = 35 ;
    #####:  156:    	a90 = a174;
    #####:  157:    	a99 = (a40 + 14);
    #####:  158:    	a44 = a143[0];
    #####:  159:    	a96 = a35;
    #####:  160:    	a87 = 33 ;
    #####:  161:    	a42 = ((((a42 % 14842) + 15157) - -5407) * 1);
    #####:  162:    	a40 = 8;
unconditional  0 never executed
    #####:  163:    	}printf("%d\n", 22); //fflush(stdout); 
    $$$$$:  163-block  0
call    0 never executed
unconditional  1 never executed
        -:  164:    } 
    #####:  165:printf("POINT: 15\n");
    $$$$$:  165-block  0
call    0 never executed
        -:  166:
    #####:  167:    if(((((27 == a90[4]) && (27 == a90[4])) && a40 == 1) && ((((((-165 < a163) && (48 >= a163)) && ((a14 <=  93 && ( cf==1  && (70 == a96[5]))) && input == inputs[4])) && a44 == a143[0]) && a42 <=  -51) && a44 == a143[0]))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  167-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  167-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  167-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  167-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  167-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  167-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  167-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  167-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:  167-block  8
branch 18 never executed
branch 19 never executed
    $$$$$:  167-block  9
branch 20 never executed
branch 21 never executed
    $$$$$:  167-block 10
branch 22 never executed
branch 23 never executed
    #####:  168:printf("POINT: 16\n");
    $$$$$:  168-block  0
call    0 never executed
    #####:  169:    	cf = 0;
    #####:  170:printf("POINT: 17\n");
call    0 never executed
        -:  171:
    #####:  172:    	if(((a15 == 10 && (a40 == 6 || a64 == 6)) || !(72 == a96[1]))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  172-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  172-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  172-block  2
branch  6 never executed
branch  7 never executed
    #####:  173:printf("POINT: 18\n");
    $$$$$:  173-block  0
call    0 never executed
    #####:  174:    	a96 = a35;
    #####:  175:    	a42 = ((((((a42 % 14974) - 51) + 7119) * 3) % 14974) + -15024);
    #####:  176:    	a90 = a174;
    #####:  177:    	a87 = 33 ;
    #####:  178:    	a99 = ((a40 + a40) - -7);
    #####:  179:    	a162 = 36 ;
    #####:  180:    	a44 = a143[0];
    #####:  181:    	a40 = 7; 
unconditional  0 never executed
        -:  182:    	}else {
    #####:  183:printf("POINT: 20\n");
    $$$$$:  183-block  0
call    0 never executed
    #####:  184:    	a87 = 33 ;
    #####:  185:    	a99 = ((a40 + a40) - -8);
    #####:  186:    	a44 = a143[4];
    #####:  187:    	a96 = a35;
    #####:  188:    	a42 = ((((a42 * 1) % 14974) + -51) * 1);
    #####:  189:    	a162 = 34 ;
    #####:  190:    	a90 = a174;
    #####:  191:    	a40 = 1;
unconditional  0 never executed
    #####:  192:    	}printf("%d\n", 24); //fflush(stdout); 
    $$$$$:  192-block  0
call    0 never executed
unconditional  1 never executed
        -:  193:    } 
    #####:  194:printf("POINT: 21\n");
    $$$$$:  194-block  0
call    0 never executed
        -:  195:
    #####:  196:    if(((a40 == 1 && ((a44 == a143[0] && a44 == a143[0]) && a162 == 33)) && ((a44 == a143[0] && ((70 == a96[5]) && (input == inputs[2] && (a14 <=  93 && (((-165 < a163) && (48 >= a163)) &&  cf==1 ))))) && a42 <=  -51))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  196-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  196-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  196-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  196-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  196-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  196-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  196-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  196-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:  196-block  8
branch 18 never executed
branch 19 never executed
    $$$$$:  196-block  9
branch 20 never executed
branch 21 never executed
    $$$$$:  196-block 10
branch 22 never executed
branch 23 never executed
    #####:  197:printf("POINT: 22\n");
    $$$$$:  197-block  0
call    0 never executed
    #####:  198:    	cf = 0;
    #####:  199:    	a15 = (a40 - -9);
    #####:  200:    	a163 = (((((((a163 * a42) % 14999) + -466) + -2629) * 1) % 14917) - 15081); 
    #####:  201:    	 printf("%d\n", 26); //fflush(stdout); 
call    0 never executed
unconditional  1 never executed
        -:  202:    } 
    #####:  203:printf("POINT: 23\n");
    $$$$$:  203-block  0
call    0 never executed
        -:  204:
    #####:  205:    if((((a42 <=  -51 && ((70 == a96[5]) && ((a40 == 1 && (a14 <=  93 && (input == inputs[3] &&  cf==1 ))) && a40 == 1))) && a40 == 1) && (a40 == 1 && (a42 <=  -51 && ((-165 < a163) && (48 >= a163)))))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  205-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  205-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  205-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  205-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  205-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  205-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  205-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  205-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:  205-block  8
branch 18 never executed
branch 19 never executed
    $$$$$:  205-block  9
branch 20 never executed
branch 21 never executed
    $$$$$:  205-block 10
branch 22 never executed
branch 23 never executed
    #####:  206:printf("POINT: 24\n");
    $$$$$:  206-block  0
call    0 never executed
    #####:  207:    	cf = 0;
    #####:  208:    	a15 = (a40 + 9);
    #####:  209:    	a163 = ((((((a163 * a42) % 14999) % 14917) - 15081) + -1) - 2); 
    #####:  210:    	 printf("%d\n", 26); //fflush(stdout); 
call    0 never executed
unconditional  1 never executed
        -:  211:    } 
    #####:  212:printf("POINT: 25\n");
    $$$$$:  212-block  0
call    0 never executed
        -:  213:
    #####:  214:    if(((a42 <=  -51 && ((a44 == a143[0] && (((((-165 < a163) && (48 >= a163)) &&  cf==1 ) && input == inputs[0]) && a14 <=  93)) && a162 == 33)) && ((a40 == 1 && (a44 == a143[0] && (27 == a90[4]))) && (70 == a96[5])))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  214-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  214-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  214-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  214-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  214-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  214-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  214-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  214-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:  214-block  8
branch 18 never executed
branch 19 never executed
    $$$$$:  214-block  9
branch 20 never executed
branch 21 never executed
    $$$$$:  214-block 10
branch 22 never executed
branch 23 never executed
    #####:  215:printf("POINT: 26\n");
    $$$$$:  215-block  0
call    0 never executed
    #####:  216:    	cf = 0;
    #####:  217:    	a14 = ((((((a14 * a163) % 14999) % 14775) + 15223) - 0) * 1); 
    #####:  218:    	 printf("%d\n", 26); //fflush(stdout); 
call    0 never executed
unconditional  1 never executed
        -:  219:    } 
    #####:  220:}
function calculate_outputm13 called 0 returned 0% blocks executed 0%
    #####:  221: void calculate_outputm13(int input) {
    $$$$$:  221-block  0
    #####:  222:printf("POINT: 27\n");
    $$$$$:  222-block  0
call    0 never executed
        -:  223:
    #####:  224:    if((((a44 == a143[0] && ((70 == a96[5]) && ((a40 == 1 && (( cf==1  && 448 < a14) && ((-165 < a163) && (48 >= a163)))) && input == inputs[4]))) && (27 == a90[4])) && ((a42 <=  -51 && (27 == a90[4])) && a162 == 33))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  224-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  224-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  224-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  224-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  224-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  224-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  224-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  224-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:  224-block  8
branch 18 never executed
branch 19 never executed
    $$$$$:  224-block  9
branch 20 never executed
branch 21 never executed
    $$$$$:  224-block 10
branch 22 never executed
branch 23 never executed
    #####:  225:printf("POINT: 28\n");
    $$$$$:  225-block  0
call    0 never executed
    #####:  226:    	cf = 0;
    #####:  227:    	a15 = (a40 - -12);
    #####:  228:    	a162 = 32 ;
    #####:  229:    	a87 = 34 ;
    #####:  230:    	a44 = a143[(a15 + -12)];
    #####:  231:    	a42 = ((((((a42 * a163) % 14999) % 83) - -33) / 5) / 5);
    #####:  232:    	a96 = a35;
    #####:  233:    	a90 = a39;
    #####:  234:    	a40 = ((a15 - a15) + 2); 
    #####:  235:    	 printf("%d\n", 26); //fflush(stdout); 
call    0 never executed
unconditional  1 never executed
        -:  236:    } 
    #####:  237:}
function calculate_outputm2 called 0 returned 0% blocks executed 0%
    #####:  238: void calculate_outputm2(int input) {
    $$$$$:  238-block  0
    #####:  239:printf("POINT: 29\n");
    $$$$$:  239-block  0
call    0 never executed
        -:  240:
    #####:  241:    if(((a40 == 1 && (a40 == 1 && ((a40 == 1 && (a40 == 1 && (27 == a90[4]))) && a162 == 33))) && ( cf==1  && a14 <=  93))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  241-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  241-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  241-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  241-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  241-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  241-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  241-block  6
branch 14 never executed
branch 15 never executed
    #####:  242:printf("POINT: 30\n");
    $$$$$:  242-block  0
call    0 never executed
    #####:  243:    	calculate_outputm12(input);
call    0 never executed
unconditional  1 never executed
        -:  244:    } 
    #####:  245:printf("POINT: 31\n");
    $$$$$:  245-block  0
call    0 never executed
        -:  246:
    #####:  247:    if((((a44 == a143[0] && (a162 == 33 && ( cf==1  && 448 < a14))) && a40 == 1) && ((a42 <=  -51 && a44 == a143[0]) && a40 == 1))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  247-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  247-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  247-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  247-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  247-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  247-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  247-block  6
branch 14 never executed
branch 15 never executed
    #####:  248:printf("POINT: 32\n");
    $$$$$:  248-block  0
call    0 never executed
    #####:  249:    	calculate_outputm13(input);
call    0 never executed
unconditional  1 never executed
        -:  250:    } 
    #####:  251:}
function calculate_outputm14 called 0 returned 0% blocks executed 0%
    #####:  252: void calculate_outputm14(int input) {
    $$$$$:  252-block  0
    #####:  253:printf("POINT: 33\n");
    $$$$$:  253-block  0
call    0 never executed
        -:  254:
    #####:  255:    if((((33 == a90[4]) && ((((((72 == a96[1]) &&  cf==1 ) && a99 == 9) && a162 == 32) && input == inputs[1]) && (33 == a90[4]))) && (a44 == a143[1] && (a87 == 33 && ((33 == a90[4]) && a162 == 32))))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  255-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  255-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  255-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  255-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  255-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  255-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  255-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  255-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:  255-block  8
branch 18 never executed
branch 19 never executed
    $$$$$:  255-block  9
branch 20 never executed
branch 21 never executed
    #####:  256:printf("POINT: 34\n");
    $$$$$:  256-block  0
call    0 never executed
    #####:  257:    	cf = 0;
    #####:  258:    	a87 = 35 ;
    #####:  259:    	a64 = a41[((a40 / a99) - -4)]; 
    #####:  260:    	 printf("%d\n", 26); //fflush(stdout); 
call    0 never executed
unconditional  1 never executed
        -:  261:    } 
    #####:  262:printf("POINT: 35\n");
    $$$$$:  262-block  0
call    0 never executed
        -:  263:
    #####:  264:    if((((((a40 == 2 && (( cf==1  && a87 == 33) && (72 == a96[1]))) && ((-51 < a42) && (116 >= a42))) && a40 == 2) && input == inputs[4]) && ((a40 == 2 && ((33 == a90[4]) && a99 == 9)) && a40 == 2))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  264-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  264-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  264-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  264-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  264-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  264-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  264-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  264-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:  264-block  8
branch 18 never executed
branch 19 never executed
    $$$$$:  264-block  9
branch 20 never executed
branch 21 never executed
    $$$$$:  264-block 10
branch 22 never executed
branch 23 never executed
    #####:  265:printf("POINT: 36\n");
    $$$$$:  265-block  0
call    0 never executed
    #####:  266:    	cf = 0;
    #####:  267:    	a87 = 34 ;
    #####:  268:    	a15 = (a40 - -10); 
    #####:  269:    	 printf("%d\n", 26); //fflush(stdout); 
call    0 never executed
unconditional  1 never executed
        -:  270:    } 
    #####:  271:}
function calculate_outputm15 called 0 returned 0% blocks executed 0%
    #####:  272: void calculate_outputm15(int input) {
    $$$$$:  272-block  0
    #####:  273:printf("POINT: 37\n");
    $$$$$:  273-block  0
call    0 never executed
        -:  274:
    #####:  275:    if((((33 == a90[4]) && (((33 == a90[4]) && (33 == a90[4])) && (72 == a96[1]))) && (((-51 < a42) && (116 >= a42)) && (((a99 == 10 && ((a87 == 33 &&  cf==1 ) && input == inputs[4])) && a40 == 2) && a40 == 2)))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  275-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  275-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  275-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  275-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  275-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  275-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  275-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  275-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:  275-block  8
branch 18 never executed
branch 19 never executed
    $$$$$:  275-block  9
branch 20 never executed
branch 21 never executed
    $$$$$:  275-block 10
branch 22 never executed
branch 23 never executed
    #####:  276:printf("POINT: 38\n");
    $$$$$:  276-block  0
call    0 never executed
    #####:  277:    	cf = 0;
    #####:  278:    	a87 = 34 ;
    #####:  279:    	a15 = (a99 - -2); 
    #####:  280:    	 printf("%d\n", 26); //fflush(stdout); 
call    0 never executed
unconditional  1 never executed
        -:  281:    } 
    #####:  282:printf("POINT: 39\n");
    $$$$$:  282-block  0
call    0 never executed
        -:  283:
    #####:  284:    if(((a44 == a143[1] && ((a162 == 32 && (a44 == a143[1] && (( cf==1  && a99 == 10) && (72 == a96[1])))) && a162 == 32)) && ((((-51 < a42) && (116 >= a42)) && ((33 == a90[4]) && input == inputs[1])) && a87 == 33))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  284-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  284-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  284-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  284-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  284-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  284-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  284-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  284-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:  284-block  8
branch 18 never executed
branch 19 never executed
    $$$$$:  284-block  9
branch 20 never executed
branch 21 never executed
    $$$$$:  284-block 10
branch 22 never executed
branch 23 never executed
    #####:  285:printf("POINT: 40\n");
    $$$$$:  285-block  0
call    0 never executed
    #####:  286:    	cf = 0;
    #####:  287:    	a87 = 34 ;
    #####:  288:    	a15 = (a40 + 10); 
    #####:  289:    	 printf("%d\n", 26); //fflush(stdout); 
call    0 never executed
unconditional  1 never executed
        -:  290:    } 
    #####:  291:}
function calculate_outputm16 called 0 returned 0% blocks executed 0%
    #####:  292: void calculate_outputm16(int input) {
    $$$$$:  292-block  0
    #####:  293:printf("POINT: 41\n");
    $$$$$:  293-block  0
call    0 never executed
        -:  294:
    #####:  295:    if(((a99 == 15 && ((((-51 < a42) && (116 >= a42)) && ((a87 == 33 &&  cf==1 ) && input == inputs[4])) && ((-51 < a42) && (116 >= a42)))) && ((((a162 == 32 && a162 == 32) && a162 == 32) && ((-51 < a42) && (116 >= a42))) && (72 == a96[1])))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  295-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  295-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  295-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  295-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  295-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  295-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  295-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  295-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:  295-block  8
branch 18 never executed
branch 19 never executed
    $$$$$:  295-block  9
branch 20 never executed
branch 21 never executed
    $$$$$:  295-block 10
branch 22 never executed
branch 23 never executed
    $$$$$:  295-block 11
branch 24 never executed
branch 25 never executed
    $$$$$:  295-block 12
branch 26 never executed
branch 27 never executed
    #####:  296:printf("POINT: 42\n");
    $$$$$:  296-block  0
call    0 never executed
    #####:  297:    	cf = 0;
    #####:  298:printf("POINT: 43\n");
call    0 never executed
        -:  299:
    #####:  300:    	if((!(72 == a96[1]) || a26 == a171[4])) {
branch  0 never executed
branch  1 never executed
    $$$$$:  300-block  0
branch  2 never executed
branch  3 never executed
    #####:  301:printf("POINT: 44\n");
    $$$$$:  301-block  0
call    0 never executed
    #####:  302:    	a99 = ((a40 - a40) + 9); 
unconditional  0 never executed
        -:  303:    	}else {
    #####:  304:printf("POINT: 46\n");
    $$$$$:  304-block  0
call    0 never executed
    #####:  305:    	a44 = a143[((a99 * a99) - 223)];
    #####:  306:    	a90 = a69;
    #####:  307:    	a162 = 34 ;
    #####:  308:    	a4 = ((((((a42 * a42) % 60) - -173) * 1) / 5) - -182);
    #####:  309:    	a87 = 32 ;
    #####:  310:    	a96 = a32;
    #####:  311:    	a40 = (a99 - 12);
    #####:  312:    	a42 = ((((((a42 - -168) * 10) / 9) * 5) % 99) + 119);
unconditional  0 never executed
    #####:  313:    	}printf("%d\n", 22); //fflush(stdout); 
    $$$$$:  313-block  0
call    0 never executed
unconditional  1 never executed
        -:  314:    } 
    #####:  315:}
function calculate_outputm3 called 0 returned 0% blocks executed 0%
    #####:  316: void calculate_outputm3(int input) {
    $$$$$:  316-block  0
    #####:  317:printf("POINT: 47\n");
    $$$$$:  317-block  0
call    0 never executed
        -:  318:
    #####:  319:    if((((a40 == 2 && a40 == 2) && ((-51 < a42) && (116 >= a42))) && ((((33 == a90[4]) && (a99 == 9 &&  cf==1 )) && a40 == 2) && a44 == a143[1]))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  319-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  319-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  319-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  319-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  319-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  319-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  319-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  319-block  7
branch 16 never executed
branch 17 never executed
    #####:  320:printf("POINT: 48\n");
    $$$$$:  320-block  0
call    0 never executed
    #####:  321:    	calculate_outputm14(input);
call    0 never executed
unconditional  1 never executed
        -:  322:    } 
    #####:  323:printf("POINT: 49\n");
    $$$$$:  323-block  0
call    0 never executed
        -:  324:
    #####:  325:    if((((a99 == 10 &&  cf==1 ) && ((-51 < a42) && (116 >= a42))) && (((((33 == a90[4]) && ((-51 < a42) && (116 >= a42))) && a44 == a143[1]) && (33 == a90[4])) && ((-51 < a42) && (116 >= a42))))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  325-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  325-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  325-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  325-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  325-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  325-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  325-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  325-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:  325-block  8
branch 18 never executed
branch 19 never executed
    $$$$$:  325-block  9
branch 20 never executed
branch 21 never executed
    #####:  326:printf("POINT: 50\n");
    $$$$$:  326-block  0
call    0 never executed
    #####:  327:    	calculate_outputm15(input);
call    0 never executed
unconditional  1 never executed
        -:  328:    } 
    #####:  329:printf("POINT: 51\n");
    $$$$$:  329-block  0
call    0 never executed
        -:  330:
    #####:  331:    if((((a40 == 2 && (a44 == a143[1] && ((-51 < a42) && (116 >= a42)))) && a40 == 2) && ((( cf==1  && a99 == 15) && a162 == 32) && a40 == 2))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  331-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  331-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  331-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  331-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  331-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  331-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  331-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  331-block  7
branch 16 never executed
branch 17 never executed
    #####:  332:printf("POINT: 52\n");
    $$$$$:  332-block  0
call    0 never executed
    #####:  333:    	calculate_outputm16(input);
call    0 never executed
unconditional  1 never executed
        -:  334:    } 
    #####:  335:}
function calculate_outputm17 called 3 returned 100% blocks executed 95%
        3:  336: void calculate_outputm17(int input) {
        3:  336-block  0
        3:  337:printf("POINT: 53\n");
        3:  337-block  0
call    0 returned 3
        -:  338:
        3:  339:    if(((((a44 == a143[1] && (((72 == a96[1]) && ( cf==1  && input == inputs[1])) && 448 < a14)) && a87 == 32) && a44 == a143[1]) && (((-51 < a42) && (116 >= a42)) && ((a162 == 32 && (33 == a90[4])) && a44 == a143[1])))) {
branch  0 taken 3 (fallthrough)
branch  1 taken 0
        3:  339-block  0
branch  2 taken 3 (fallthrough)
branch  3 taken 0
        3:  339-block  1
branch  4 taken 3 (fallthrough)
branch  5 taken 0
        3:  339-block  2
branch  6 taken 1 (fallthrough)
branch  7 taken 2
        1:  339-block  3
branch  8 taken 1 (fallthrough)
branch  9 taken 0
        1:  339-block  4
branch 10 taken 1 (fallthrough)
branch 11 taken 0
        1:  339-block  5
branch 12 taken 1 (fallthrough)
branch 13 taken 0
        1:  339-block  6
branch 14 taken 1 (fallthrough)
branch 15 taken 0
        1:  339-block  7
branch 16 taken 1 (fallthrough)
branch 17 taken 0
        1:  339-block  8
branch 18 taken 1 (fallthrough)
branch 19 taken 0
        1:  339-block  9
branch 20 taken 1 (fallthrough)
branch 21 taken 0
        1:  339-block 10
branch 22 taken 1 (fallthrough)
branch 23 taken 0
        1:  340:printf("POINT: 54\n");
        1:  340-block  0
call    0 returned 1
        1:  341:    	cf = 0;
        1:  342:printf("POINT: 55\n");
call    0 returned 1
        -:  343:
        1:  344:    	if((a14 <=  93 ||  cf!=1 )) {
branch  0 taken 1 (fallthrough)
branch  1 taken 0
        1:  344-block  0
branch  2 taken 1 (fallthrough)
branch  3 taken 0
        1:  345:printf("POINT: 56\n");
        1:  345-block  0
call    0 returned 1
        1:  346:    	a87 = 34 ;
        1:  347:    	a15 = (a40 + 10); 
unconditional  0 taken 1
        -:  348:    	}else {
    #####:  349:printf("POINT: 58\n");
    $$$$$:  349-block  0
call    0 never executed
    #####:  350:    	a87 = 35 ;
    #####:  351:    	a64 = a41[(a40 - -2)];
unconditional  0 never executed
        1:  352:    	}printf("%d\n", 26); //fflush(stdout); 
        1:  352-block  0
call    0 returned 1
unconditional  1 taken 1
        -:  353:    } 
        3:  354:printf("POINT: 59\n");
        3:  354-block  0
call    0 returned 3
        -:  355:
        3:  356:    if(((a40 == 2 && (((72 == a96[1]) && (((a87 == 32 &&  cf==1 ) && input == inputs[2]) && a40 == 2)) && 448 < a14)) && (((-51 < a42) && (116 >= a42)) && ((a40 == 2 && a162 == 32) && a40 == 2)))) {
branch  0 taken 3 (fallthrough)
branch  1 taken 0
        3:  356-block  0
branch  2 taken 3 (fallthrough)
branch  3 taken 0
        3:  356-block  1
branch  4 taken 2 (fallthrough)
branch  5 taken 1
        2:  356-block  2
branch  6 taken 2 (fallthrough)
branch  7 taken 0
        2:  356-block  3
branch  8 taken 1 (fallthrough)
branch  9 taken 1
        1:  356-block  4
branch 10 taken 1 (fallthrough)
branch 11 taken 0
        1:  356-block  5
branch 12 taken 1 (fallthrough)
branch 13 taken 0
        1:  356-block  6
branch 14 taken 1 (fallthrough)
branch 15 taken 0
        1:  356-block  7
branch 16 taken 1 (fallthrough)
branch 17 taken 0
        1:  356-block  8
branch 18 taken 1 (fallthrough)
branch 19 taken 0
        1:  356-block  9
branch 20 taken 1 (fallthrough)
branch 21 taken 0
        1:  356-block 10
branch 22 taken 1 (fallthrough)
branch 23 taken 0
        1:  357:printf("POINT: 60\n");
        1:  357-block  0
call    0 returned 1
        1:  358:    	cf = 0;
        1:  359:    	a87 = 35 ;
        1:  360:    	a64 = a41[(a40 + -1)]; 
        1:  361:    	 printf("%d\n", 21); //fflush(stdout); 
call    0 returned 1
unconditional  1 taken 1
        -:  362:    } 
        3:  363:}
function calculate_outputm4 called 3 returned 100% blocks executed 100%
        3:  364: void calculate_outputm4(int input) {
        3:  364-block  0
        3:  365:printf("POINT: 61\n");
        3:  365-block  0
call    0 returned 3
        -:  366:
        3:  367:    if(((a162 == 32 && ((448 < a14 &&  cf==1 ) && a44 == a143[1])) && ((a40 == 2 && ((33 == a90[4]) && a44 == a143[1])) && ((-51 < a42) && (116 >= a42))))) {
branch  0 taken 3 (fallthrough)
branch  1 taken 0
        3:  367-block  0
branch  2 taken 3 (fallthrough)
branch  3 taken 0
        3:  367-block  1
branch  4 taken 3 (fallthrough)
branch  5 taken 0
        3:  367-block  2
branch  6 taken 3 (fallthrough)
branch  7 taken 0
        3:  367-block  3
branch  8 taken 3 (fallthrough)
branch  9 taken 0
        3:  367-block  4
branch 10 taken 3 (fallthrough)
branch 11 taken 0
        3:  367-block  5
branch 12 taken 3 (fallthrough)
branch 13 taken 0
        3:  367-block  6
branch 14 taken 3 (fallthrough)
branch 15 taken 0
        3:  367-block  7
branch 16 taken 3 (fallthrough)
branch 17 taken 0
        3:  368:printf("POINT: 62\n");
        3:  368-block  0
call    0 returned 3
        3:  369:    	calculate_outputm17(input);
call    0 returned 3
unconditional  1 taken 3
        -:  370:    } 
        3:  371:}
function calculate_outputm18 called 0 returned 0% blocks executed 0%
    #####:  372: void calculate_outputm18(int input) {
    $$$$$:  372-block  0
    #####:  373:printf("POINT: 63\n");
    $$$$$:  373-block  0
call    0 never executed
        -:  374:
    #####:  375:    if((((((a15 == 9 && (a87 == 34 &&  cf==1 )) && ((-51 < a42) && (116 >= a42))) && input == inputs[3]) && a40 == 2) && ((a162 == 32 && (((72 == a96[1]) && a40 == 2) && (33 == a90[4]))) && (33 == a90[4])))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  375-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  375-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  375-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  375-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  375-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  375-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  375-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  375-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:  375-block  8
branch 18 never executed
branch 19 never executed
    $$$$$:  375-block  9
branch 20 never executed
branch 21 never executed
    $$$$$:  375-block 10
branch 22 never executed
branch 23 never executed
    #####:  376:printf("POINT: 64\n");
    $$$$$:  376-block  0
call    0 never executed
    #####:  377:    	cf = 0;
    #####:  378:    	a15 = ((a40 + a40) + 8); 
    #####:  379:    	 printf("%d\n", 26); //fflush(stdout); 
call    0 never executed
unconditional  1 never executed
        -:  380:    } 
    #####:  381:printf("POINT: 65\n");
    $$$$$:  381-block  0
call    0 never executed
        -:  382:
    #####:  383:    if(((a40 == 2 && (a162 == 32 && (a87 == 34 && (a44 == a143[1] && (((-51 < a42) && (116 >= a42)) && a44 == a143[1]))))) && (input == inputs[4] && (a44 == a143[1] && (( cf==1  && (72 == a96[1])) && a15 == 9))))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  383-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  383-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  383-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  383-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  383-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  383-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  383-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  383-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:  383-block  8
branch 18 never executed
branch 19 never executed
    $$$$$:  383-block  9
branch 20 never executed
branch 21 never executed
    $$$$$:  383-block 10
branch 22 never executed
branch 23 never executed
    #####:  384:printf("POINT: 66\n");
    $$$$$:  384-block  0
call    0 never executed
    #####:  385:    	cf = 0;
    #####:  386:    	a87 = 33 ;
    #####:  387:    	a99 = (a15 + 6); 
    #####:  388:    	 printf("%d\n", 19); //fflush(stdout); 
call    0 never executed
unconditional  1 never executed
        -:  389:    } 
    #####:  390:}
function calculate_outputm19 called 0 returned 0% blocks executed 0%
    #####:  391: void calculate_outputm19(int input) {
    $$$$$:  391-block  0
    #####:  392:printf("POINT: 67\n");
    $$$$$:  392-block  0
call    0 never executed
        -:  393:
    #####:  394:    if(((a162 == 32 && ((33 == a90[4]) && ((a15 == 12 && ((33 == a90[4]) && a162 == 32)) && input == inputs[1]))) && (a40 == 2 && ((33 == a90[4]) && (( cf==1  && (72 == a96[1])) && a87 == 34))))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  394-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  394-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  394-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  394-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  394-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  394-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  394-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  394-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:  394-block  8
branch 18 never executed
branch 19 never executed
    $$$$$:  394-block  9
branch 20 never executed
branch 21 never executed
    #####:  395:printf("POINT: 68\n");
    $$$$$:  395-block  0
call    0 never executed
    #####:  396:    	cf = 0;
    #####:  397:    	a87 = 36 ;
    #####:  398:    	a26 = a171[a40]; 
    #####:  399:    	 printf("%d\n", 22); //fflush(stdout); 
call    0 never executed
unconditional  1 never executed
        -:  400:    } 
    #####:  401:}
function calculate_outputm20 called 0 returned 0% blocks executed 0%
    #####:  402: void calculate_outputm20(int input) {
    $$$$$:  402-block  0
    #####:  403:printf("POINT: 69\n");
    $$$$$:  403-block  0
call    0 never executed
        -:  404:
    #####:  405:    if(((a162 == 32 && ((a87 == 34 && (33 == a90[4])) && input == inputs[4])) && (((33 == a90[4]) && ((33 == a90[4]) && ((((72 == a96[1]) &&  cf==1 ) && a15 == 13) && a162 == 32))) && a162 == 32))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  405-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  405-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  405-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  405-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  405-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  405-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  405-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  405-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:  405-block  8
branch 18 never executed
branch 19 never executed
    $$$$$:  405-block  9
branch 20 never executed
branch 21 never executed
    #####:  406:printf("POINT: 70\n");
    $$$$$:  406-block  0
call    0 never executed
    #####:  407:    	cf = 0;
    #####:  408:    	a40 = 1;
    #####:  409:    	a96 = a103;
    #####:  410:    	a90 = a174;
    #####:  411:    	a162 = 33 ;
    #####:  412:    	a163 = ((((((a42 * a42) % 106) + -58) * 5) % 106) - 58);
    #####:  413:    	a44 = a143[(a40 / a15)];
    #####:  414:    	a14 = (((((a163 * a163) % 14775) + 15223) * 1) * 1);
    #####:  415:    	a42 = (((((a42 * a163) + -8458) - -13798) + 7440) + -23725); 
    #####:  416:    	 printf("%d\n", 24); //fflush(stdout); 
call    0 never executed
unconditional  1 never executed
        -:  417:    } 
    #####:  418:printf("POINT: 71\n");
    $$$$$:  418-block  0
call    0 never executed
        -:  419:
    #####:  420:    if(((((33 == a90[4]) && ((( cf==1  && a15 == 13) && input == inputs[3]) && a40 == 2)) && a162 == 32) && (a162 == 32 && (a87 == 34 && ((72 == a96[1]) && (a44 == a143[1] && (33 == a90[4]))))))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  420-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  420-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  420-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  420-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  420-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  420-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  420-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  420-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:  420-block  8
branch 18 never executed
branch 19 never executed
    $$$$$:  420-block  9
branch 20 never executed
branch 21 never executed
    #####:  421:printf("POINT: 72\n");
    $$$$$:  421-block  0
call    0 never executed
    #####:  422:    	cf = 0;
    #####:  423:    	a96 = a103;
    #####:  424:    	a163 = ((((a42 * a42) - 23073) - 38) - 76);
    #####:  425:    	a162 = 33 ;
    #####:  426:    	a44 = a143[(a40 - 2)];
    #####:  427:    	a90 = a174;
    #####:  428:    	a15 = (a40 - -8);
    #####:  429:    	a42 = ((((((a42 * a163) % 14999) % 14974) - 15024) * 1) - 1);
    #####:  430:    	a40 = 1; 
    #####:  431:    	 printf("%d\n", 22); //fflush(stdout); 
call    0 never executed
unconditional  1 never executed
        -:  432:    } 
    #####:  433:}
function calculate_outputm5 called 0 returned 0% blocks executed 0%
    #####:  434: void calculate_outputm5(int input) {
    $$$$$:  434-block  0
    #####:  435:printf("POINT: 73\n");
    $$$$$:  435-block  0
call    0 never executed
        -:  436:
    #####:  437:    if((((((a162 == 32 && a44 == a143[1]) && (33 == a90[4])) && a40 == 2) && ((-51 < a42) && (116 >= a42))) && (((-51 < a42) && (116 >= a42)) && ( cf==1  && a15 == 9)))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  437-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  437-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  437-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  437-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  437-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  437-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  437-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  437-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:  437-block  8
branch 18 never executed
branch 19 never executed
    #####:  438:printf("POINT: 74\n");
    $$$$$:  438-block  0
call    0 never executed
    #####:  439:    	calculate_outputm18(input);
call    0 never executed
unconditional  1 never executed
        -:  440:    } 
    #####:  441:printf("POINT: 75\n");
    $$$$$:  441-block  0
call    0 never executed
        -:  442:
    #####:  443:    if((((( cf==1  && a15 == 12) && a40 == 2) && ((-51 < a42) && (116 >= a42))) && (((a40 == 2 && ((-51 < a42) && (116 >= a42))) && a40 == 2) && ((-51 < a42) && (116 >= a42))))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  443-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  443-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  443-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  443-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  443-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  443-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  443-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  443-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:  443-block  8
branch 18 never executed
branch 19 never executed
    $$$$$:  443-block  9
branch 20 never executed
branch 21 never executed
    #####:  444:printf("POINT: 76\n");
    $$$$$:  444-block  0
call    0 never executed
    #####:  445:    	calculate_outputm19(input);
call    0 never executed
unconditional  1 never executed
        -:  446:    } 
    #####:  447:printf("POINT: 77\n");
    $$$$$:  447-block  0
call    0 never executed
        -:  448:
    #####:  449:    if(((a40 == 2 && ((33 == a90[4]) && (33 == a90[4]))) && ((a44 == a143[1] && ((a15 == 13 &&  cf==1 ) && ((-51 < a42) && (116 >= a42)))) && (33 == a90[4])))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  449-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  449-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  449-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  449-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  449-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  449-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  449-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  449-block  7
branch 16 never executed
branch 17 never executed
    #####:  450:printf("POINT: 78\n");
    $$$$$:  450-block  0
call    0 never executed
    #####:  451:    	calculate_outputm20(input);
call    0 never executed
unconditional  1 never executed
        -:  452:    } 
    #####:  453:}
function calculate_outputm21 called 0 returned 0% blocks executed 0%
    #####:  454: void calculate_outputm21(int input) {
    $$$$$:  454-block  0
    #####:  455:printf("POINT: 79\n");
    $$$$$:  455-block  0
call    0 never executed
        -:  456:
    #####:  457:    if(((input == inputs[2] && (a87 == 35 && ((a40 == 2 && (a64 == a41[1] && ((72 == a96[1]) &&  cf==1 ))) && a44 == a143[1]))) && ((((33 == a90[4]) && ((-51 < a42) && (116 >= a42))) && a162 == 32) && a44 == a143[1]))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  457-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  457-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  457-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  457-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  457-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  457-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  457-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  457-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:  457-block  8
branch 18 never executed
branch 19 never executed
    $$$$$:  457-block  9
branch 20 never executed
branch 21 never executed
    $$$$$:  457-block 10
branch 22 never executed
branch 23 never executed
    #####:  458:printf("POINT: 80\n");
    $$$$$:  458-block  0
call    0 never executed
    #####:  459:    	cf = 0;
    #####:  460:    	a15 = (a40 - -8);
    #####:  461:    	a44 = a143[(a15 + -10)];
    #####:  462:    	a90 = a174;
    #####:  463:    	a96 = a103;
    #####:  464:    	a163 = ((((((a42 * a42) + -21149) + 18420) * 2) % 14917) + -15081);
    #####:  465:    	a162 = 33 ;
    #####:  466:    	a40 = (a15 - 9);
    #####:  467:    	a42 = ((((((a42 * a163) % 14999) % 14974) - 15024) - 1) - 2); 
    #####:  468:    	 printf("%d\n", 22); //fflush(stdout); 
call    0 never executed
unconditional  1 never executed
        -:  469:    } 
    #####:  470:}
function calculate_outputm22 called 0 returned 0% blocks executed 0%
    #####:  471: void calculate_outputm22(int input) {
    $$$$$:  471-block  0
    #####:  472:printf("POINT: 81\n");
    $$$$$:  472-block  0
call    0 never executed
        -:  473:
    #####:  474:    if((((33 == a90[4]) && ((a40 == 2 && (((-51 < a42) && (116 >= a42)) && (input == inputs[1] && (( cf==1  && (72 == a96[1])) && a64 == a41[4])))) && ((-51 < a42) && (116 >= a42)))) && ((((-51 < a42) && (116 >= a42)) && ((-51 < a42) && (116 >= a42))) && a87 == 35))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  474-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  474-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  474-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  474-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  474-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  474-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  474-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  474-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:  474-block  8
branch 18 never executed
branch 19 never executed
    $$$$$:  474-block  9
branch 20 never executed
branch 21 never executed
    $$$$$:  474-block 10
branch 22 never executed
branch 23 never executed
    $$$$$:  474-block 11
branch 24 never executed
branch 25 never executed
    $$$$$:  474-block 12
branch 26 never executed
branch 27 never executed
    $$$$$:  474-block 13
branch 28 never executed
branch 29 never executed
    #####:  475:printf("POINT: 82\n");
    $$$$$:  475-block  0
call    0 never executed
    #####:  476:    	cf = 0;
    #####:  477:    	a87 = 36 ;
    #####:  478:    	a26 = a171[a40]; 
    #####:  479:    	 printf("%d\n", 22); //fflush(stdout); 
call    0 never executed
unconditional  1 never executed
        -:  480:    } 
    #####:  481:}
function calculate_outputm23 called 0 returned 0% blocks executed 0%
    #####:  482: void calculate_outputm23(int input) {
    $$$$$:  482-block  0
    #####:  483:printf("POINT: 83\n");
    $$$$$:  483-block  0
call    0 never executed
        -:  484:
    #####:  485:    if(((a40 == 2 && (((((( cf==1  && input == inputs[0]) && a64 == a41[6]) && (72 == a96[1])) && (33 == a90[4])) && a40 == 2) && (33 == a90[4]))) && ((a162 == 32 && a87 == 35) && a40 == 2))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  485-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  485-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  485-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  485-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  485-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  485-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  485-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  485-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:  485-block  8
branch 18 never executed
branch 19 never executed
    $$$$$:  485-block  9
branch 20 never executed
branch 21 never executed
    #####:  486:printf("POINT: 84\n");
    $$$$$:  486-block  0
call    0 never executed
    #####:  487:    	cf = 0;
    #####:  488:    	a87 = 32 ;
    #####:  489:    	a14 = ((((a42 * a42) - -6974) - 1125) - -10263); 
    #####:  490:    	 printf("%d\n", 26); //fflush(stdout); 
call    0 never executed
unconditional  1 never executed
        -:  491:    } 
    #####:  492:printf("POINT: 85\n");
    $$$$$:  492-block  0
call    0 never executed
        -:  493:
    #####:  494:    if((a44 == a143[1] && (a40 == 2 && ((((72 == a96[1]) && (input == inputs[1] && (((( cf==1  && a87 == 35) && a64 == a41[6]) && a40 == 2) && a162 == 32))) && (33 == a90[4])) && ((-51 < a42) && (116 >= a42)))))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  494-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  494-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  494-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  494-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  494-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  494-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  494-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  494-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:  494-block  8
branch 18 never executed
branch 19 never executed
    $$$$$:  494-block  9
branch 20 never executed
branch 21 never executed
    $$$$$:  494-block 10
branch 22 never executed
branch 23 never executed
    #####:  495:printf("POINT: 86\n");
    $$$$$:  495-block  0
call    0 never executed
    #####:  496:    	cf = 0;
    #####:  497:    	a64 = a41[(a40 / a40)]; 
    #####:  498:    	 printf("%d\n", 19); //fflush(stdout); 
call    0 never executed
unconditional  1 never executed
        -:  499:    } 
    #####:  500:printf("POINT: 87\n");
    $$$$$:  500-block  0
call    0 never executed
        -:  501:
    #####:  502:    if(((input == inputs[3] && (((((33 == a90[4]) && (( cf==1  && a64 == a41[6]) && (72 == a96[1]))) && a87 == 35) && (33 == a90[4])) && a44 == a143[1])) && (a44 == a143[1] && (a40 == 2 && a162 == 32)))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  502-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  502-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  502-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  502-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  502-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  502-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  502-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  502-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:  502-block  8
branch 18 never executed
branch 19 never executed
    $$$$$:  502-block  9
branch 20 never executed
branch 21 never executed
    #####:  503:printf("POINT: 88\n");
    $$$$$:  503-block  0
call    0 never executed
    #####:  504:    	cf = 0;
    #####:  505:    	a90 = a39;
    #####:  506:    	a163 = ((((((a42 * a42) % 106) + -58) + 1) + -9371) + 9369);
    #####:  507:    	a96 = a103;
    #####:  508:    	a162 = 32 ;
    #####:  509:    	a14 = ((((((a163 * a163) % 15046) + -14952) - -9309) - 2499) + -6811);
    #####:  510:    	a40 = 7;
    #####:  511:    	a44 = a143[1];
    #####:  512:    	a42 = (((a42 - -178) + -4007) - -4017); 
    #####:  513:    	 printf("%d\n", 21); //fflush(stdout); 
call    0 never executed
unconditional  1 never executed
        -:  514:    } 
    #####:  515:printf("POINT: 89\n");
    $$$$$:  515-block  0
call    0 never executed
        -:  516:
    #####:  517:    if(((a44 == a143[1] && (a40 == 2 && ((33 == a90[4]) && ((input == inputs[4] && (a87 == 35 &&  cf==1 )) && a162 == 32)))) && (((-51 < a42) && (116 >= a42)) && (a64 == a41[6] && (a40 == 2 && (72 == a96[1])))))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  517-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  517-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  517-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  517-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  517-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  517-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  517-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  517-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:  517-block  8
branch 18 never executed
branch 19 never executed
    $$$$$:  517-block  9
branch 20 never executed
branch 21 never executed
    $$$$$:  517-block 10
branch 22 never executed
branch 23 never executed
    #####:  518:printf("POINT: 90\n");
    $$$$$:  518-block  0
call    0 never executed
    #####:  519:    	cf = 0;
    #####:  520:    	a90 = a69;
    #####:  521:    	a14 = ((((a42 * a42) + 6613) - -9793) + 134);
    #####:  522:    	a96 = a103;
    #####:  523:    	a40 = 3;
    #####:  524:    	a162 = 35 ;
    #####:  525:    	a163 = (((((((a14 * a42) % 14999) % 106) - 57) - -15284) / 5) + -3029);
    #####:  526:    	a44 = a143[2];
    #####:  527:    	a42 = ((((a42 - -11875) - -10497) % 83) + -47); 
    #####:  528:    	 printf("%d\n", 19); //fflush(stdout); 
call    0 never executed
unconditional  1 never executed
        -:  529:    } 
    #####:  530:printf("POINT: 91\n");
    $$$$$:  530-block  0
call    0 never executed
        -:  531:
    #####:  532:    if(((((33 == a90[4]) && (a44 == a143[1] && (72 == a96[1]))) && a162 == 32) && (a162 == 32 && ((a162 == 32 && ((( cf==1  && a87 == 35) && input == inputs[2]) && a64 == a41[6])) && ((-51 < a42) && (116 >= a42)))))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  532-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  532-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  532-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  532-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  532-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  532-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  532-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  532-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:  532-block  8
branch 18 never executed
branch 19 never executed
    $$$$$:  532-block  9
branch 20 never executed
branch 21 never executed
    $$$$$:  532-block 10
branch 22 never executed
branch 23 never executed
    #####:  533:printf("POINT: 92\n");
    $$$$$:  533-block  0
call    0 never executed
    #####:  534:    	cf = 0;
    #####:  535:    	a87 = 33 ;
    #####:  536:    	a99 = (a40 - -13); 
    #####:  537:    	 printf("%d\n", 21); //fflush(stdout); 
call    0 never executed
unconditional  1 never executed
        -:  538:    } 
    #####:  539:}
function calculate_outputm6 called 0 returned 0% blocks executed 0%
    #####:  540: void calculate_outputm6(int input) {
    $$$$$:  540-block  0
    #####:  541:printf("POINT: 93\n");
    $$$$$:  541-block  0
call    0 never executed
        -:  542:
    #####:  543:    if((((33 == a90[4]) && ((33 == a90[4]) && ( cf==1  && a64 == a41[1]))) && (a162 == 32 && (((33 == a90[4]) && ((-51 < a42) && (116 >= a42))) && a40 == 2)))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  543-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  543-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  543-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  543-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  543-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  543-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  543-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  543-block  7
branch 16 never executed
branch 17 never executed
    #####:  544:printf("POINT: 94\n");
    $$$$$:  544-block  0
call    0 never executed
    #####:  545:    	calculate_outputm21(input);
call    0 never executed
unconditional  1 never executed
        -:  546:    } 
    #####:  547:printf("POINT: 95\n");
    $$$$$:  547-block  0
call    0 never executed
        -:  548:
    #####:  549:    if((((33 == a90[4]) && (a40 == 2 && (a40 == 2 && a44 == a143[1]))) && (((-51 < a42) && (116 >= a42)) && ((a64 == a41[4] &&  cf==1 ) && a44 == a143[1])))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  549-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  549-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  549-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  549-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  549-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  549-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  549-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  549-block  7
branch 16 never executed
branch 17 never executed
    #####:  550:printf("POINT: 96\n");
    $$$$$:  550-block  0
call    0 never executed
    #####:  551:    	calculate_outputm22(input);
call    0 never executed
unconditional  1 never executed
        -:  552:    } 
    #####:  553:printf("POINT: 97\n");
    $$$$$:  553-block  0
call    0 never executed
        -:  554:
    #####:  555:    if((((a64 == a41[6] &&  cf==1 ) && a162 == 32) && (((-51 < a42) && (116 >= a42)) && (a44 == a143[1] && (a44 == a143[1] && (a40 == 2 && a40 == 2)))))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  555-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  555-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  555-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  555-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  555-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  555-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  555-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  555-block  7
branch 16 never executed
branch 17 never executed
    #####:  556:printf("POINT: 98\n");
    $$$$$:  556-block  0
call    0 never executed
    #####:  557:    	calculate_outputm23(input);
call    0 never executed
unconditional  1 never executed
        -:  558:    } 
    #####:  559:}
function calculate_outputm24 called 0 returned 0% blocks executed 0%
    #####:  560: void calculate_outputm24(int input) {
    $$$$$:  560-block  0
    #####:  561:printf("POINT: 99\n");
    $$$$$:  561-block  0
call    0 never executed
        -:  562:
    #####:  563:    if((((input == inputs[1] && a40 == 2) && a40 == 2) && (a40 == 2 && (a162 == 32 && (a44 == a143[1] && (((( cf==1  && (72 == a96[1])) && a26 == a171[2]) && ((-51 < a42) && (116 >= a42))) && a87 == 36)))))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  563-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  563-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  563-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  563-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  563-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  563-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  563-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  563-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:  563-block  8
branch 18 never executed
branch 19 never executed
    $$$$$:  563-block  9
branch 20 never executed
branch 21 never executed
    $$$$$:  563-block 10
branch 22 never executed
branch 23 never executed
    #####:  564:printf("POINT: 100\n");
    $$$$$:  564-block  0
call    0 never executed
    #####:  565:    	cf = 0;
    #####:  566:    	a87 = 34 ;
    #####:  567:    	a15 = (a40 + 7); 
    #####:  568:    	 printf("%d\n", 24); //fflush(stdout); 
call    0 never executed
unconditional  1 never executed
        -:  569:    } 
    #####:  570:}
function calculate_outputm25 called 0 returned 0% blocks executed 0%
    #####:  571: void calculate_outputm25(int input) {
    $$$$$:  571-block  0
    #####:  572:printf("POINT: 101\n");
    $$$$$:  572-block  0
call    0 never executed
        -:  573:
    #####:  574:    if(((a44 == a143[1] && (input == inputs[3] && (a26 == a171[3] && ((72 == a96[1]) &&  cf==1 )))) && (a162 == 32 && ((a162 == 32 && ((a87 == 36 && a40 == 2) && a44 == a143[1])) && a162 == 32)))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  574-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  574-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  574-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  574-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  574-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  574-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  574-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  574-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:  574-block  8
branch 18 never executed
branch 19 never executed
    $$$$$:  574-block  9
branch 20 never executed
branch 21 never executed
    #####:  575:printf("POINT: 102\n");
    $$$$$:  575-block  0
call    0 never executed
    #####:  576:    	cf = 0;
    #####:  577:    	a15 = (a40 - -8);
    #####:  578:    	a163 = ((((a42 * a42) + -17684) + -4017) / 5);
    #####:  579:    	a96 = a103;
    #####:  580:    	a40 = (a15 + -9);
    #####:  581:    	a162 = 33 ;
    #####:  582:    	a44 = a143[(a40 + -1)];
    #####:  583:    	a90 = a174;
    #####:  584:    	a42 = (((((a42 * a163) % 14999) / 5) + -8996) - -5766); 
    #####:  585:    	 printf("%d\n", 19); //fflush(stdout); 
call    0 never executed
unconditional  1 never executed
        -:  586:    } 
    #####:  587:}
function calculate_outputm7 called 0 returned 0% blocks executed 0%
    #####:  588: void calculate_outputm7(int input) {
    $$$$$:  588-block  0
    #####:  589:printf("POINT: 103\n");
    $$$$$:  589-block  0
call    0 never executed
        -:  590:
    #####:  591:    if(((((-51 < a42) && (116 >= a42)) && ((a44 == a143[1] && (( cf==1  && a26 == a171[2]) && a44 == a143[1])) && ((-51 < a42) && (116 >= a42)))) && ((33 == a90[4]) && a40 == 2))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  591-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  591-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  591-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  591-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  591-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  591-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  591-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  591-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:  591-block  8
branch 18 never executed
branch 19 never executed
    #####:  592:printf("POINT: 104\n");
    $$$$$:  592-block  0
call    0 never executed
    #####:  593:    	calculate_outputm24(input);
call    0 never executed
unconditional  1 never executed
        -:  594:    } 
    #####:  595:printf("POINT: 105\n");
    $$$$$:  595-block  0
call    0 never executed
        -:  596:
    #####:  597:    if((((a44 == a143[1] && ( cf==1  && a26 == a171[3])) && a162 == 32) && (((a162 == 32 && (33 == a90[4])) && a44 == a143[1]) && (33 == a90[4])))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  597-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  597-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  597-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  597-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  597-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  597-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  597-block  6
branch 14 never executed
branch 15 never executed
    #####:  598:printf("POINT: 106\n");
    $$$$$:  598-block  0
call    0 never executed
    #####:  599:    	calculate_outputm25(input);
call    0 never executed
unconditional  1 never executed
        -:  600:    } 
    #####:  601:}
function calculate_outputm26 called 0 returned 0% blocks executed 0%
    #####:  602: void calculate_outputm26(int input) {
    $$$$$:  602-block  0
    #####:  603:printf("POINT: 107\n");
    $$$$$:  603-block  0
call    0 never executed
        -:  604:
    #####:  605:    if(((a40 == 3 && (a44 == a143[2] && (((116 < a42) && (315 >= a42)) && (a4 <=  112 && ((80 == a96[3]) && (((116 < a42) && (315 >= a42)) && (36 == a90[1]))))))) && ((a163 <=  -165 && (input == inputs[4] &&  cf==1 )) && a40 == 3))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  605-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  605-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  605-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  605-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  605-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  605-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  605-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  605-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:  605-block  8
branch 18 never executed
branch 19 never executed
    $$$$$:  605-block  9
branch 20 never executed
branch 21 never executed
    $$$$$:  605-block 10
branch 22 never executed
branch 23 never executed
    $$$$$:  605-block 11
branch 24 never executed
branch 25 never executed
    #####:  606:printf("POINT: 108\n");
    $$$$$:  606-block  0
call    0 never executed
    #####:  607:    	cf = 0;
    #####:  608:    	a87 = 36 ;
    #####:  609:    	a96 = a35;
    #####:  610:    	a42 = ((((((a42 * a4) % 14999) - -14739) + 199) % 83) + 32);
    #####:  611:    	a44 = a143[(a40 - 2)];
    #####:  612:    	a162 = 32 ;
    #####:  613:    	a90 = a39;
    #####:  614:    	a26 = a171[a40];
    #####:  615:    	a40 = 2; 
    #####:  616:    	 printf("%d\n", 22); //fflush(stdout); 
call    0 never executed
unconditional  1 never executed
        -:  617:    } 
    #####:  618:}
function calculate_outputm8 called 0 returned 0% blocks executed 0%
    #####:  619: void calculate_outputm8(int input) {
    $$$$$:  619-block  0
    #####:  620:printf("POINT: 109\n");
    $$$$$:  620-block  0
call    0 never executed
        -:  621:
    #####:  622:    if(((a162 == 34 && ((((116 < a42) && (315 >= a42)) && (a163 <=  -165 &&  cf==1 )) && a44 == a143[2])) && ((a40 == 3 && a40 == 3) && ((116 < a42) && (315 >= a42))))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  622-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  622-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  622-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  622-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  622-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  622-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  622-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  622-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:  622-block  8
branch 18 never executed
branch 19 never executed
    #####:  623:printf("POINT: 110\n");
    $$$$$:  623-block  0
call    0 never executed
    #####:  624:    	calculate_outputm26(input);
call    0 never executed
unconditional  1 never executed
        -:  625:    } 
    #####:  626:}
function calculate_outputm27 called 0 returned 0% blocks executed 0%
    #####:  627: void calculate_outputm27(int input) {
    $$$$$:  627-block  0
    #####:  628:printf("POINT: 111\n");
    $$$$$:  628-block  0
call    0 never executed
        -:  629:
    #####:  630:    if(((a162 == 34 && (((a44 == a143[2] && (36 == a90[1])) && a44 == a143[2]) && a40 == 3)) && (a44 == a143[2] && (a87 == 32 && (input == inputs[1] && (((80 == a96[3]) &&  cf==1 ) && ((112 < a4) && (233 >= a4)))))))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  630-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  630-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  630-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  630-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  630-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  630-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  630-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  630-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:  630-block  8
branch 18 never executed
branch 19 never executed
    $$$$$:  630-block  9
branch 20 never executed
branch 21 never executed
    $$$$$:  630-block 10
branch 22 never executed
branch 23 never executed
    #####:  631:printf("POINT: 112\n");
    $$$$$:  631-block  0
call    0 never executed
    #####:  632:    	cf = 0;
    #####:  633:    	a42 = ((((((((a42 * a4) % 14999) % 83) + 18) * 10) / 9) * 9) / 10);
    #####:  634:    	a96 = a35;
    #####:  635:    	a44 = a143[((a40 - a40) - -1)];
    #####:  636:    	a15 = (a40 - -9);
    #####:  637:    	a90 = a39;
    #####:  638:    	a162 = 32 ;
    #####:  639:    	a87 = 34 ;
    #####:  640:    	a40 = (a15 - 10); 
    #####:  641:    	 printf("%d\n", 26); //fflush(stdout); 
call    0 never executed
unconditional  1 never executed
        -:  642:    } 
    #####:  643:printf("POINT: 113\n");
    $$$$$:  643-block  0
call    0 never executed
        -:  644:
    #####:  645:    if(((((36 == a90[1]) && ((((116 < a42) && (315 >= a42)) && a40 == 3) && a40 == 3)) && a44 == a143[2]) && (a40 == 3 && ((input == inputs[4] && ((80 == a96[3]) && ( cf==1  && a87 == 32))) && ((112 < a4) && (233 >= a4)))))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  645-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  645-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  645-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  645-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  645-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  645-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  645-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  645-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:  645-block  8
branch 18 never executed
branch 19 never executed
    $$$$$:  645-block  9
branch 20 never executed
branch 21 never executed
    $$$$$:  645-block 10
branch 22 never executed
branch 23 never executed
    $$$$$:  645-block 11
branch 24 never executed
branch 25 never executed
    #####:  646:printf("POINT: 114\n");
    $$$$$:  646-block  0
call    0 never executed
    #####:  647:    	cf = 0;
    #####:  648:    	a90 = a39;
    #####:  649:    	a15 = ((a40 - a40) + 12);
    #####:  650:    	a44 = a143[((a15 + a15) + -23)];
    #####:  651:    	a162 = 32 ;
    #####:  652:    	a87 = 34 ;
    #####:  653:    	a96 = a35;
    #####:  654:    	a42 = ((((((a42 * a4) % 14999) + -16817) % 83) - -69) - -41);
    #####:  655:    	a40 = (a15 + -10); 
    #####:  656:    	 printf("%d\n", 26); //fflush(stdout); 
call    0 never executed
unconditional  1 never executed
        -:  657:    } 
    #####:  658:}
function calculate_outputm9 called 0 returned 0% blocks executed 0%
    #####:  659: void calculate_outputm9(int input) {
    $$$$$:  659-block  0
    #####:  660:printf("POINT: 115\n");
    $$$$$:  660-block  0
call    0 never executed
        -:  661:
    #####:  662:    if(((a44 == a143[2] && ((a40 == 3 && (a87 == 32 &&  cf==1 )) && a40 == 3)) && ((a40 == 3 && a44 == a143[2]) && a40 == 3))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  662-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  662-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  662-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  662-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  662-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  662-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  662-block  6
branch 14 never executed
branch 15 never executed
    #####:  663:printf("POINT: 116\n");
    $$$$$:  663-block  0
call    0 never executed
    #####:  664:    	calculate_outputm27(input);
call    0 never executed
unconditional  1 never executed
        -:  665:    } 
    #####:  666:}
function calculate_outputm28 called 3 returned 100% blocks executed 100%
        3:  667: void calculate_outputm28(int input) {
        3:  667-block  0
        3:  668:printf("POINT: 117\n");
        3:  668-block  0
call    0 returned 3
        -:  669:
        3:  670:    if((((a44 == a143[2] && ((233 < a4) && (323 >= a4))) && a162 == 34) && (((((((116 < a42) && (315 >= a42)) && (a87 == 35 && ((80 == a96[3]) &&  cf==1 ))) && input == inputs[2]) && a162 == 34) && a44 == a143[2]) && a162 == 34))) {
branch  0 taken 3 (fallthrough)
branch  1 taken 0
        3:  670-block  0
branch  2 taken 3 (fallthrough)
branch  3 taken 0
        3:  670-block  1
branch  4 taken 3 (fallthrough)
branch  5 taken 0
        3:  670-block  2
branch  6 taken 3 (fallthrough)
branch  7 taken 0
        3:  670-block  3
branch  8 taken 3 (fallthrough)
branch  9 taken 0
        3:  670-block  4
branch 10 taken 3 (fallthrough)
branch 11 taken 0
        3:  670-block  5
branch 12 taken 3 (fallthrough)
branch 13 taken 0
        3:  670-block  6
branch 14 taken 3 (fallthrough)
branch 15 taken 0
        3:  670-block  7
branch 16 taken 3 (fallthrough)
branch 17 taken 0
        3:  670-block  8
branch 18 taken 1 (fallthrough)
branch 19 taken 2
        1:  670-block  9
branch 20 taken 1 (fallthrough)
branch 21 taken 0
        1:  670-block 10
branch 22 taken 1 (fallthrough)
branch 23 taken 0
        1:  670-block 11
branch 24 taken 1 (fallthrough)
branch 25 taken 0
        1:  671:printf("POINT: 118\n");
        1:  671-block  0
call    0 returned 1
        1:  672:    	cf = 0;
        1:  673:    	a4 = (((((a4 * a42) % 14999) + -27685) + 27508) - 29290);
        1:  674:    	a163 = (((((a42 * a42) % 14999) - 15423) / 5) - 12610); 
        1:  675:    	 printf("%d\n", 25); //fflush(stdout); 
call    0 returned 1
unconditional  1 taken 1
        -:  676:    } 
        3:  677:printf("POINT: 119\n");
        3:  677-block  0
call    0 returned 3
        -:  678:
        3:  679:    if(((input == inputs[0] && ((((233 < a4) && (323 >= a4)) && (a162 == 34 && (a44 == a143[2] && (a44 == a143[2] && (( cf==1  && a87 == 35) && (80 == a96[3])))))) && a44 == a143[2])) && ((36 == a90[1]) && (36 == a90[1])))) {
branch  0 taken 1 (fallthrough)
branch  1 taken 2
        1:  679-block  0
branch  2 taken 1 (fallthrough)
branch  3 taken 0
        1:  679-block  1
branch  4 taken 1 (fallthrough)
branch  5 taken 0
        1:  679-block  2
branch  6 taken 1 (fallthrough)
branch  7 taken 0
        1:  679-block  3
branch  8 taken 1 (fallthrough)
branch  9 taken 0
        1:  679-block  4
branch 10 taken 1 (fallthrough)
branch 11 taken 0
        1:  679-block  5
branch 12 taken 1 (fallthrough)
branch 13 taken 0
        1:  679-block  6
branch 14 taken 1 (fallthrough)
branch 15 taken 0
        1:  679-block  7
branch 16 taken 1 (fallthrough)
branch 17 taken 0
        1:  679-block  8
branch 18 taken 1 (fallthrough)
branch 19 taken 0
        1:  679-block  9
branch 20 taken 1 (fallthrough)
branch 21 taken 0
        1:  679-block 10
branch 22 taken 1 (fallthrough)
branch 23 taken 0
        1:  680:printf("POINT: 120\n");
        1:  680-block  0
call    0 returned 1
        1:  681:    	cf = 0;
        1:  682:    	a163 = (((((((a4 * a4) % 14999) % 106) - 123) * 10) / 9) - -4);
        1:  683:    	a96 = a103;
        1:  684:    	a162 = 33 ;
        1:  685:    	a14 = ((((((a42 * a163) % 14999) % 14775) + 15223) + 2) + 0);
        1:  686:    	a40 = 1;
        1:  687:    	a42 = (((((a42 * a4) % 14999) + -18484) + -4815) * 1);
        1:  688:    	a90 = a174;
        1:  689:    	a44 = a143[(a40 + -1)]; 
        1:  690:    	 printf("%d\n", 24); //fflush(stdout); 
call    0 returned 1
unconditional  1 taken 1
        -:  691:    } 
        3:  692:}
function calculate_outputm29 called 14 returned 100% blocks executed 100%
       14:  693: void calculate_outputm29(int input) {
       14:  693-block  0
       14:  694:printf("POINT: 121\n");
       14:  694-block  0
call    0 returned 14
        -:  695:
       14:  696:    if(((a40 == 3 && (a162 == 34 && a162 == 34)) && (((36 == a90[1]) && ((((116 < a42) && (315 >= a42)) && (a87 == 36 && (((233 < a4) && (323 >= a4)) && ( cf==1  && (80 == a96[3]))))) && input == inputs[3])) && ((116 < a42) && (315 >= a42))))) {
branch  0 taken 14 (fallthrough)
branch  1 taken 0
       14:  696-block  0
branch  2 taken 14 (fallthrough)
branch  3 taken 0
       14:  696-block  1
branch  4 taken 14 (fallthrough)
branch  5 taken 0
       14:  696-block  2
branch  6 taken 14 (fallthrough)
branch  7 taken 0
       14:  696-block  3
branch  8 taken 14 (fallthrough)
branch  9 taken 0
       14:  696-block  4
branch 10 taken 14 (fallthrough)
branch 11 taken 0
       14:  696-block  5
branch 12 taken 14 (fallthrough)
branch 13 taken 0
       14:  696-block  6
branch 14 taken 14 (fallthrough)
branch 15 taken 0
       14:  696-block  7
branch 16 taken 14 (fallthrough)
branch 17 taken 0
       14:  696-block  8
branch 18 taken 14 (fallthrough)
branch 19 taken 0
       14:  696-block  9
branch 20 taken 14 (fallthrough)
branch 21 taken 0
       14:  696-block 10
branch 22 taken 4 (fallthrough)
branch 23 taken 10
        4:  696-block 11
branch 24 taken 4 (fallthrough)
branch 25 taken 0
        4:  696-block 12
branch 26 taken 4 (fallthrough)
branch 27 taken 0
        4:  697:printf("POINT: 122\n");
        4:  697-block  0
call    0 returned 4
        4:  698:    	cf = 0;
        4:  699:    	a87 = 32 ;
        4:  700:    	a40 = 2;
        4:  701:    	a162 = 32 ;
        4:  702:    	a14 = (((((a42 * a42) % 14999) - -3296) * 1) / 5);
        4:  703:    	a90 = a39;
        4:  704:    	a96 = a35;
        4:  705:    	a42 = (((((((a42 * a4) % 14999) % 83) + 32) * 5) % 83) + -50);
        4:  706:    	a44 = a143[((a40 * a40) - 3)]; 
        4:  707:    	 printf("%d\n", 25); //fflush(stdout); 
call    0 returned 4
unconditional  1 taken 4
        -:  708:    } 
       14:  709:printf("POINT: 123\n");
       14:  709-block  0
call    0 returned 14
        -:  710:
       14:  711:    if(((a87 == 36 && ((a44 == a143[2] && a162 == 34) && a44 == a143[2])) && (((233 < a4) && (323 >= a4)) && (a162 == 34 && (((input == inputs[4] && ( cf==1  && (80 == a96[3]))) && ((116 < a42) && (315 >= a42))) && a40 == 3))))) {
branch  0 taken 10 (fallthrough)
branch  1 taken 4
       10:  711-block  0
branch  2 taken 10 (fallthrough)
branch  3 taken 0
       10:  711-block  1
branch  4 taken 10 (fallthrough)
branch  5 taken 0
       10:  711-block  2
branch  6 taken 10 (fallthrough)
branch  7 taken 0
       10:  711-block  3
branch  8 taken 10 (fallthrough)
branch  9 taken 0
       10:  711-block  4
branch 10 taken 10 (fallthrough)
branch 11 taken 0
       10:  711-block  5
branch 12 taken 10 (fallthrough)
branch 13 taken 0
       10:  711-block  6
branch 14 taken 3 (fallthrough)
branch 15 taken 7
        3:  711-block  7
branch 16 taken 3 (fallthrough)
branch 17 taken 0
        3:  711-block  8
branch 18 taken 3 (fallthrough)
branch 19 taken 0
        3:  711-block  9
branch 20 taken 3 (fallthrough)
branch 21 taken 0
        3:  711-block 10
branch 22 taken 3 (fallthrough)
branch 23 taken 0
        3:  711-block 11
branch 24 taken 3 (fallthrough)
branch 25 taken 0
        3:  712:printf("POINT: 124\n");
        3:  712-block  0
call    0 returned 3
        3:  713:    	cf = 0;
        3:  714:    	a87 = 35 ; 
        3:  715:    	 printf("%d\n", 19); //fflush(stdout); 
call    0 returned 3
unconditional  1 taken 3
        -:  716:    } 
       14:  717:}
function calculate_outputm10 called 17 returned 100% blocks executed 100%
       17:  718: void calculate_outputm10(int input) {
       17:  718-block  0
       17:  719:printf("POINT: 125\n");
       17:  719-block  0
call    0 returned 17
        -:  720:
       17:  721:    if(((a40 == 3 && ((36 == a90[1]) && a162 == 34)) && (((a40 == 3 && (a87 == 35 &&  cf==1 )) && (36 == a90[1])) && ((116 < a42) && (315 >= a42))))) {
branch  0 taken 17 (fallthrough)
branch  1 taken 0
       17:  721-block  0
branch  2 taken 17 (fallthrough)
branch  3 taken 0
       17:  721-block  1
branch  4 taken 17 (fallthrough)
branch  5 taken 0
       17:  721-block  2
branch  6 taken 17 (fallthrough)
branch  7 taken 0
       17:  721-block  3
branch  8 taken 3 (fallthrough)
branch  9 taken 14
        3:  721-block  4
branch 10 taken 3 (fallthrough)
branch 11 taken 0
        3:  721-block  5
branch 12 taken 3 (fallthrough)
branch 13 taken 0
        3:  721-block  6
branch 14 taken 3 (fallthrough)
branch 15 taken 0
        3:  721-block  7
branch 16 taken 3 (fallthrough)
branch 17 taken 0
        3:  722:printf("POINT: 126\n");
        3:  722-block  0
call    0 returned 3
        3:  723:    	calculate_outputm28(input);
call    0 returned 3
unconditional  1 taken 3
        -:  724:    } 
       17:  725:printf("POINT: 127\n");
       17:  725-block  0
call    0 returned 17
        -:  726:
       17:  727:    if((((a40 == 3 && (a87 == 36 &&  cf==1 )) && a44 == a143[2]) && ((a40 == 3 && ((36 == a90[1]) && (36 == a90[1]))) && a40 == 3))) {
branch  0 taken 16 (fallthrough)
branch  1 taken 1
       16:  727-block  0
branch  2 taken 14 (fallthrough)
branch  3 taken 2
       14:  727-block  1
branch  4 taken 14 (fallthrough)
branch  5 taken 0
       14:  727-block  2
branch  6 taken 14 (fallthrough)
branch  7 taken 0
       14:  727-block  3
branch  8 taken 14 (fallthrough)
branch  9 taken 0
       14:  727-block  4
branch 10 taken 14 (fallthrough)
branch 11 taken 0
       14:  727-block  5
branch 12 taken 14 (fallthrough)
branch 13 taken 0
       14:  727-block  6
branch 14 taken 14 (fallthrough)
branch 15 taken 0
       14:  728:printf("POINT: 128\n");
       14:  728-block  0
call    0 returned 14
       14:  729:    	calculate_outputm29(input);
call    0 returned 14
unconditional  1 taken 14
        -:  730:    } 
       17:  731:}
        -:  732:
function calculate_output called 20 returned 100% blocks executed 55%
       20:  733: void calculate_output(int input) {
       20:  733-block  0
       20:  734:        cf = 1;
        -:  735:
       20:  736:printf("POINT: 129\n");
       20:  736-block  0
call    0 returned 20
        -:  737:
       20:  738:    if(((a42 <=  -51 && a42 <=  -51) && (a42 <=  -51 && (((a162 == 33 && ((70 == a96[5]) &&  cf==1 )) && a42 <=  -51) && a162 == 33)))) {
branch  0 taken 0 (fallthrough)
branch  1 taken 20
    $$$$$:  738-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  738-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  738-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  738-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  738-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  738-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  738-block  6
branch 14 never executed
branch 15 never executed
    #####:  739:printf("POINT: 130\n");
    $$$$$:  739-block  0
call    0 never executed
    #####:  740:printf("POINT: 131\n");
call    0 never executed
        -:  741:
    #####:  742:    	if((((a42 <=  -51 && a42 <=  -51) && (27 == a90[4])) && ((27 == a90[4]) && ((( cf==1  && a163 <=  -165) && a162 == 33) && a42 <=  -51)))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  742-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  742-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  742-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  742-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  742-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  742-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  742-block  6
branch 14 never executed
branch 15 never executed
    #####:  743:printf("POINT: 132\n");
    $$$$$:  743-block  0
call    0 never executed
    #####:  744:    		calculate_outputm1(input);
call    0 never executed
unconditional  1 never executed
        -:  745:    	} 
    #####:  746:printf("POINT: 133\n");
    $$$$$:  746-block  0
call    0 never executed
        -:  747:
    #####:  748:    	if(((a162 == 33 && (a44 == a143[0] && ((((-165 < a163) && (48 >= a163)) &&  cf==1 ) && a42 <=  -51))) && ((27 == a90[4]) && (a44 == a143[0] && a44 == a143[0])))) {
branch  0 never executed
branch  1 never executed
    $$$$$:  748-block  0
branch  2 never executed
branch  3 never executed
    $$$$$:  748-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  748-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  748-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  748-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  748-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  748-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  748-block  7
branch 16 never executed
branch 17 never executed
    #####:  749:printf("POINT: 134\n");
    $$$$$:  749-block  0
call    0 never executed
    #####:  750:    		calculate_outputm2(input);
call    0 never executed
unconditional  1 never executed
        -:  751:    	} 
        -:  752:    } 
       20:  753:printf("POINT: 135\n");
       20:  753-block  0
call    0 returned 20
        -:  754:
       20:  755:    if(((a44 == a143[1] && ((a162 == 32 && ((72 == a96[1]) &&  cf==1 )) && a40 == 2)) && ((a162 == 32 && a162 == 32) && a40 == 2))) {
branch  0 taken 3 (fallthrough)
branch  1 taken 17
        3:  755-block  0
branch  2 taken 3 (fallthrough)
branch  3 taken 0
        3:  755-block  1
branch  4 taken 3 (fallthrough)
branch  5 taken 0
        3:  755-block  2
branch  6 taken 3 (fallthrough)
branch  7 taken 0
        3:  755-block  3
branch  8 taken 3 (fallthrough)
branch  9 taken 0
        3:  755-block  4
branch 10 taken 3 (fallthrough)
branch 11 taken 0
        3:  755-block  5
branch 12 taken 3 (fallthrough)
branch 13 taken 0
        3:  755-block  6
branch 14 taken 3 (fallthrough)
branch 15 taken 0
        3:  756:printf("POINT: 136\n");
        3:  756-block  0
call    0 returned 3
        3:  757:printf("POINT: 137\n");
call    0 returned 3
        -:  758:
        3:  759:    	if((((33 == a90[4]) && ((((-51 < a42) && (116 >= a42)) && (a44 == a143[1] && ((-51 < a42) && (116 >= a42)))) && ((-51 < a42) && (116 >= a42)))) && ((33 == a90[4]) && (a87 == 33 &&  cf==1 )))) {
branch  0 taken 3 (fallthrough)
branch  1 taken 0
        3:  759-block  0
branch  2 taken 3 (fallthrough)
branch  3 taken 0
        3:  759-block  1
branch  4 taken 3 (fallthrough)
branch  5 taken 0
        3:  759-block  2
branch  6 taken 3 (fallthrough)
branch  7 taken 0
        3:  759-block  3
branch  8 taken 3 (fallthrough)
branch  9 taken 0
        3:  759-block  4
branch 10 taken 3 (fallthrough)
branch 11 taken 0
        3:  759-block  5
branch 12 taken 3 (fallthrough)
branch 13 taken 0
        3:  759-block  6
branch 14 taken 3 (fallthrough)
branch 15 taken 0
        3:  759-block  7
branch 16 taken 3 (fallthrough)
branch 17 taken 0
        3:  759-block  8
branch 18 taken 0 (fallthrough)
branch 19 taken 3
    $$$$$:  759-block  9
branch 20 never executed
branch 21 never executed
    #####:  760:printf("POINT: 138\n");
    $$$$$:  760-block  0
call    0 never executed
    #####:  761:    		calculate_outputm3(input);
call    0 never executed
unconditional  1 never executed
        -:  762:    	} 
        3:  763:printf("POINT: 139\n");
        3:  763-block  0
call    0 returned 3
        -:  764:
        3:  765:    	if(((a162 == 32 && (((-51 < a42) && (116 >= a42)) && (( cf==1  && a87 == 32) && a40 == 2))) && (a44 == a143[1] && (((-51 < a42) && (116 >= a42)) && a162 == 32)))) {
branch  0 taken 3 (fallthrough)
branch  1 taken 0
        3:  765-block  0
branch  2 taken 3 (fallthrough)
branch  3 taken 0
        3:  765-block  1
branch  4 taken 3 (fallthrough)
branch  5 taken 0
        3:  765-block  2
branch  6 taken 3 (fallthrough)
branch  7 taken 0
        3:  765-block  3
branch  8 taken 3 (fallthrough)
branch  9 taken 0
        3:  765-block  4
branch 10 taken 3 (fallthrough)
branch 11 taken 0
        3:  765-block  5
branch 12 taken 3 (fallthrough)
branch 13 taken 0
        3:  765-block  6
branch 14 taken 3 (fallthrough)
branch 15 taken 0
        3:  765-block  7
branch 16 taken 3 (fallthrough)
branch 17 taken 0
        3:  765-block  8
branch 18 taken 3 (fallthrough)
branch 19 taken 0
        3:  766:printf("POINT: 140\n");
        3:  766-block  0
call    0 returned 3
        3:  767:    		calculate_outputm4(input);
call    0 returned 3
unconditional  1 taken 3
        -:  768:    	} 
        3:  769:printf("POINT: 141\n");
        3:  769-block  0
call    0 returned 3
        -:  770:
        3:  771:    	if((((a162 == 32 && (( cf==1  && a87 == 34) && (33 == a90[4]))) && ((-51 < a42) && (116 >= a42))) && ((((-51 < a42) && (116 >= a42)) && ((-51 < a42) && (116 >= a42))) && (33 == a90[4])))) {
branch  0 taken 3 (fallthrough)
branch  1 taken 0
        3:  771-block  0
branch  2 taken 1 (fallthrough)
branch  3 taken 2
        1:  771-block  1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    $$$$$:  771-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  771-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  771-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  771-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  771-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  771-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:  771-block  8
branch 18 never executed
branch 19 never executed
    $$$$$:  771-block  9
branch 20 never executed
branch 21 never executed
    #####:  772:printf("POINT: 142\n");
    $$$$$:  772-block  0
call    0 never executed
    #####:  773:    		calculate_outputm5(input);
call    0 never executed
unconditional  1 never executed
        -:  774:    	} 
        3:  775:printf("POINT: 143\n");
        3:  775-block  0
call    0 returned 3
        -:  776:
        3:  777:    	if(((((-51 < a42) && (116 >= a42)) && (a44 == a143[1] && (a162 == 32 && (((-51 < a42) && (116 >= a42)) && (a87 == 35 &&  cf==1 ))))) && (a40 == 2 && a44 == a143[1]))) {
branch  0 taken 3 (fallthrough)
branch  1 taken 0
        3:  777-block  0
branch  2 taken 3 (fallthrough)
branch  3 taken 0
        3:  777-block  1
branch  4 taken 3 (fallthrough)
branch  5 taken 0
        3:  777-block  2
branch  6 taken 3 (fallthrough)
branch  7 taken 0
        3:  777-block  3
branch  8 taken 3 (fallthrough)
branch  9 taken 0
        3:  777-block  4
branch 10 taken 3 (fallthrough)
branch 11 taken 0
        3:  777-block  5
branch 12 taken 1 (fallthrough)
branch 13 taken 2
        1:  777-block  6
branch 14 taken 0 (fallthrough)
branch 15 taken 1
    $$$$$:  777-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:  777-block  8
branch 18 never executed
branch 19 never executed
    #####:  778:printf("POINT: 144\n");
    $$$$$:  778-block  0
call    0 never executed
    #####:  779:    		calculate_outputm6(input);
call    0 never executed
unconditional  1 never executed
        -:  780:    	} 
        3:  781:printf("POINT: 145\n");
        3:  781-block  0
call    0 returned 3
        -:  782:
        3:  783:    	if(((a162 == 32 && ( cf==1  && a87 == 36)) && (((((33 == a90[4]) && a162 == 32) && a40 == 2) && a162 == 32) && ((-51 < a42) && (116 >= a42))))) {
branch  0 taken 3 (fallthrough)
branch  1 taken 0
        3:  783-block  0
branch  2 taken 1 (fallthrough)
branch  3 taken 2
        1:  783-block  1
branch  4 taken 0 (fallthrough)
branch  5 taken 1
    $$$$$:  783-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  783-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  783-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  783-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  783-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  783-block  7
branch 16 never executed
branch 17 never executed
    #####:  784:printf("POINT: 146\n");
    $$$$$:  784-block  0
call    0 never executed
    #####:  785:    		calculate_outputm7(input);
call    0 never executed
unconditional  1 never executed
        -:  786:    	} 
        -:  787:    } 
       20:  788:printf("POINT: 147\n");
       20:  788-block  0
call    0 returned 20
        -:  789:
       20:  790:    if(((a40 == 3 && (((80 == a96[3]) &&  cf==1 ) && (36 == a90[1]))) && (((36 == a90[1]) && (a40 == 3 && ((116 < a42) && (315 >= a42)))) && ((116 < a42) && (315 >= a42))))) {
branch  0 taken 17 (fallthrough)
branch  1 taken 3
       17:  790-block  0
branch  2 taken 17 (fallthrough)
branch  3 taken 0
       17:  790-block  1
branch  4 taken 17 (fallthrough)
branch  5 taken 0
       17:  790-block  2
branch  6 taken 17 (fallthrough)
branch  7 taken 0
       17:  790-block  3
branch  8 taken 17 (fallthrough)
branch  9 taken 0
       17:  790-block  4
branch 10 taken 17 (fallthrough)
branch 11 taken 0
       17:  790-block  5
branch 12 taken 17 (fallthrough)
branch 13 taken 0
       17:  790-block  6
branch 14 taken 17 (fallthrough)
branch 15 taken 0
       17:  790-block  7
branch 16 taken 17 (fallthrough)
branch 17 taken 0
       17:  790-block  8
branch 18 taken 17 (fallthrough)
branch 19 taken 0
       17:  791:printf("POINT: 148\n");
       17:  791-block  0
call    0 returned 17
       17:  792:printf("POINT: 149\n");
call    0 returned 17
        -:  793:
       17:  794:    	if(((a40 == 3 && ((( cf==1  && a4 <=  112) && a162 == 34) && a40 == 3)) && (a44 == a143[2] && (a162 == 34 && a44 == a143[2])))) {
branch  0 taken 17 (fallthrough)
branch  1 taken 0
       17:  794-block  0
branch  2 taken 17 (fallthrough)
branch  3 taken 0
       17:  794-block  1
branch  4 taken 0 (fallthrough)
branch  5 taken 17
    $$$$$:  794-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  794-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  794-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  794-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  794-block  6
branch 14 never executed
branch 15 never executed
    #####:  795:printf("POINT: 150\n");
    $$$$$:  795-block  0
call    0 never executed
    #####:  796:    		calculate_outputm8(input);
call    0 never executed
unconditional  1 never executed
        -:  797:    	} 
       17:  798:printf("POINT: 151\n");
       17:  798-block  0
call    0 returned 17
        -:  799:
       17:  800:    	if((((((112 < a4) && (233 >= a4)) &&  cf==1 ) && a40 == 3) && (a162 == 34 && (((36 == a90[1]) && (((116 < a42) && (315 >= a42)) && a162 == 34)) && a40 == 3)))) {
branch  0 taken 17 (fallthrough)
branch  1 taken 0
       17:  800-block  0
branch  2 taken 0 (fallthrough)
branch  3 taken 17
    $$$$$:  800-block  1
branch  4 never executed
branch  5 never executed
    $$$$$:  800-block  2
branch  6 never executed
branch  7 never executed
    $$$$$:  800-block  3
branch  8 never executed
branch  9 never executed
    $$$$$:  800-block  4
branch 10 never executed
branch 11 never executed
    $$$$$:  800-block  5
branch 12 never executed
branch 13 never executed
    $$$$$:  800-block  6
branch 14 never executed
branch 15 never executed
    $$$$$:  800-block  7
branch 16 never executed
branch 17 never executed
    $$$$$:  800-block  8
branch 18 never executed
branch 19 never executed
    #####:  801:printf("POINT: 152\n");
    $$$$$:  801-block  0
call    0 never executed
    #####:  802:    		calculate_outputm9(input);
call    0 never executed
unconditional  1 never executed
        -:  803:    	} 
       17:  804:printf("POINT: 153\n");
       17:  804-block  0
call    0 returned 17
        -:  805:
       17:  806:    	if((((((a44 == a143[2] && a40 == 3) && ((116 < a42) && (315 >= a42))) && a44 == a143[2]) && a162 == 34) && (((116 < a42) && (315 >= a42)) && ( cf==1  && ((233 < a4) && (323 >= a4)))))) {
branch  0 taken 17 (fallthrough)
branch  1 taken 0
       17:  806-block  0
branch  2 taken 17 (fallthrough)
branch  3 taken 0
       17:  806-block  1
branch  4 taken 17 (fallthrough)
branch  5 taken 0
       17:  806-block  2
branch  6 taken 17 (fallthrough)
branch  7 taken 0
       17:  806-block  3
branch  8 taken 17 (fallthrough)
branch  9 taken 0
       17:  806-block  4
branch 10 taken 17 (fallthrough)
branch 11 taken 0
       17:  806-block  5
branch 12 taken 17 (fallthrough)
branch 13 taken 0
       17:  806-block  6
branch 14 taken 17 (fallthrough)
branch 15 taken 0
       17:  806-block  7
branch 16 taken 17 (fallthrough)
branch 17 taken 0
       17:  806-block  8
branch 18 taken 17 (fallthrough)
branch 19 taken 0
       17:  806-block  9
branch 20 taken 17 (fallthrough)
branch 21 taken 0
       17:  807:printf("POINT: 154\n");
       17:  807-block  0
call    0 returned 17
       17:  808:    		calculate_outputm10(input);
call    0 returned 17
unconditional  1 taken 17
        -:  809:    	} 
        -:  810:    } 
       20:  811:    errorCheck();
       20:  811-block  0
call    0 returned 20
        -:  812:
        -:  813:
       20:  814:printf("POINT: 155\n");
call    0 returned 20
        -:  815:
       20:  816:  if((cf==1)) 
branch  0 taken 9 (fallthrough)
branch  1 taken 11
        9:  817:printf("POINT: 156\n");
        9:  817-block  0
call    0 returned 9
unconditional  1 taken 9
        -:  818:    {
        -:  819:    
        -:  820:    }
        -:  821:    	//fprintf(stderr, "Invalid input: %d\n", input); 
       20:  822:}
        -:  823:
        -:  824:
function main called 10 returned 100% blocks executed 100%
       10:  825:int main()
       10:  825-block  0
        -:  826:{
       10:  827:kappa = 0;
        -:  828:    // main i/o-loop
        -:  829:      
       10:  830:printf("POINT: 157\n");
       10:  830-block  0
call    0 returned 10
        -:  831:
       30:  832:    for (int FLAG=0;FLAG<BOUND;FLAG++) {
unconditional  0 taken 10
unconditional  1 taken 20
       30:  832-block  0
branch  2 taken 20
branch  3 taken 10 (fallthrough)
       20:  833:printf("POINT: 158\n");
       20:  833-block  0
call    0 returned 20
       20:  834:        int symb; scanf("%d",&symb);  
call    0 returned 20
        -:  835:        // operate eca engine
       20:  836:printf("POINT: 159\n");
call    0 returned 20
        -:  837:
       20:  838:           if((symb != 2) && (symb != 4) && (symb != 3) && (symb != 1) && (symb != 5))
branch  0 taken 19 (fallthrough)
branch  1 taken 1
       19:  838-block  0
branch  2 taken 17 (fallthrough)
branch  3 taken 2
       17:  838-block  1
branch  4 taken 13 (fallthrough)
branch  5 taken 4
       13:  838-block  2
branch  6 taken 8 (fallthrough)
branch  7 taken 5
        8:  838-block  3
branch  8 taken 5 (fallthrough)
branch  9 taken 3
        5:  839:printf("POINT: 160\n");
        5:  839-block  0
call    0 returned 5
unconditional  1 taken 5
       20:  840:          printf("This is return -2 \n");
       20:  840-block  0
call    0 returned 20
       20:  841:        calculate_output(symb);
call    0 returned 20
       20:  842:        printf("%d",symb);
call    0 returned 20
        -:  843:    }
        -:  844:    
       10:  845: return 0;
       10:  845-block  0
unconditional  0 taken 10
        -:  846:
        -:  847:}
